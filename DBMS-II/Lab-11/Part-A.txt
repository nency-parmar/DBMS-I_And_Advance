------------ Part - A ------------
[
  {
    "ROLLNO": 101,
    "SNAME": "Vina",
    "DEPARTMENT": "CE",
    "FEES": 15000,
    "SEM": 3,
    "GENDER": "Female",
    "CITY": "Rajkot"
  },
  {
    "ROLLNO": 102,
    "SNAME": "Krisha",
    "DEPARTMENT": "EC",
    "FEES": 8000,
    "SEM": 5,
    "GENDER": "Female",
    "CITY": "Ahmedabad"
  },
  {
    "ROLLNO": 103,
    "SNAME": "Priti",
    "DEPARTMENT": "Civil",
    "FEES": 12000,
    "SEM": 7,
    "GENDER": "Female",
    "CITY": "Baroda"
  },
  {
    "ROLLNO": 104,
    "SNAME": "Mitul",
    "DEPARTMENT": "CE",
    "FEES": 15000,
    "SEM": 3,
    "GENDER": "Male",
    "CITY": "Rajkot"
  },
  {
    "ROLLNO": 105,
    "SNAME": "Keshav",
    "DEPARTMENT": "CE",
    "FEES": 15000,
    "SEM": 3,
    "GENDER": "Male",
    "CITY": "Jamnagar"
  },
  {
    "ROLLNO": 106,
    "SNAME": "Zarna",
    "DEPARTMENT": "Civil",
    "FEES": 12000,
    "SEM": 5,
    "GENDER": "Female",
    "CITY": "Ahmedabad"
  },
  {
    "ROLLNO": 107,
    "SNAME": "Nima",
    "DEPARTMENT": "EE",
    "FEES": 9000,
    "SEM": 5,
    "GENDER": "Female",
    "CITY": "Rajkot"
  },
  {
    "ROLLNO": 108,
    "SNAME": "Dhruv",
    "DEPARTMENT": "Mechanical",
    "FEES": 10000,
    "SEM": 5,
    "GENDER": "Male",
    "CITY": "Rajkot"
  },
  {
    "ROLLNO": 109,
    "SNAME": "Krish",
    "DEPARTMENT": "Mechanical",
    "FEES": 10000,
    "SEM": 7,
    "GENDER": "Male",
    "CITY": "Baroda"
  },
  {
    "ROLLNO": 110,
    "SNAME": "Zeel",
    "DEPARTMENT": "EE",
    "FEES": 9000,
    "SEM": 3,
    "GENDER": "Female",
    "CITY": "Jamnagar"
  }
]

1. Find employees whose name start with E. 
    => db.Employees.find({SNAME:/^E/i}).forEach(printjson)

2. Find employees whose name ends with n.
    => db.Employees.find({SNAME:/n$/i}).forEach(printjson) 

3. Find employees whose name starts with S or M in your collection. 
    => db.Employees.find({SNAME:/^[S M]/i})

4. Find employees where city starts with A to M in your collection.
    => db.Employees.find({CITY:/^[A M]/i})
 
5. Find employees where city name ends in ‘ney’. 
    => db.Employees.find({city:/ney$/i})

6. Display employee info whose name contains n. (Both uppercase(N) and lowercase(n))
    => db.Employees.find({SNAME:/^n$/i})

7. Display employee info whose name starts with E and having 5 characters. 
    => db.Employees.find({SNAME:/^E....$/})

8. Display employee whose name start with S and ends in a. 
    => db.Employees.find({SNAME:/^S*a$/})

9. Display EID, ENAME, CITY and SALARY whose name starts with ‘Phi’.
    => db.Employees.find({ENAME:/^Phi/},{EID:1,ENAME:1,CITY:1,SALARY:1})

10. Display ENAME, JOININGDATE and CITY whose city contains ‘dne’ as three letters in city name.
    => db.Employees.find({city:/^dne$/},{ENAME:1,JOININGDATE:1,CITY:1})

11. Display ENAME, JOININGDATE and CITY who does not belongs to city London or Sydney.

12. Find employees whose names start with 'J'. 
    => db.Employees.find({ENAME:/^J/})

13. Find employees whose names end with 'y'.
    => db.Employees.find({ENAME:/y$/})

14. Find employees whose names contain the letter 'a'. 
    => db.Employees.find({ENAME:/^a$/})

15. Find employees whose names contain either 'a' or 'e'. 
    => db.Employees.find({ENAME:/^[a e]$/})

16. Find employees whose names start with 'J' and end with 'n'.
    => db.Employees.find({ENAME:/^j*n$/}) 

17. Find employees whose CITY starts with 'New'.
    => db.Employees.find({CITY:/^New/}) 

18. Find employees whose CITY does not start with 'L'
    => db.Employees.find({CITY:{$not:{/^L/}}}) 

19. Find employees whose CITY contains the word 'York'. 
    => db.Employees.find({CITY:/^York$/})

20. Find employees whose names have two consecutive vowels (a, e, i, o, u). 
    => db.Employees.find({ENAME:/[a e i o u]{2}/i})

21. Find employees whose names have three or more letters. 
    => db.Employees.find({ENAME:/^.../})

22. Find employees whose names have exactly 4 letters. 
    => db.Employees.find({ENAME:/^....$/})

23. Find employees whose names start with either 'S' or 'M'. 
    => db.Employees.find({ENAME:/^[S M]/})

24. Find employees whose names contain 'il' anywhere. 
    => db.Employees.find({ENAME:/^li$/})

25. Find employees whose names do not contain 'a'.
    => db.Employees.find({ENAME:{$not:{/^a$/}}}) 

26. Find employees whose names contain any digit. 
    => db.Employees.find({ENAME:/\d/})

27. Find employees whose names contain exactly one vowel. 
    => db.Employees.find({ENAME:/^[a e i o u]$/i})

28. Find employees whose names start with any uppercase letter followed by any lowercase letter.
    => db.Employees.find({})